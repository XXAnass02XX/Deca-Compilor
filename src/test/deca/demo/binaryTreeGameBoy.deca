class Cell {
    Cell rightSon = null;
    Cell leftSon = null;
    int value = 0;

    void init(int value) {
        this.value = value;
    }

    void setRightSon(Cell rightSon) {
        this.rightSon = rightSon;
    }

    void setLeftSon(Cell leftSon) {
        this.leftSon = leftSon;
    }
}

class BinaryTree {
    Cell head = null;

    void addCell(int data) {
        this.head = addCellRec(head, data);
    }

    Cell addCellRec(Cell head, int data) {
        Cell a;
        if (head == null) {
            a = new Cell();
            a.init(data);
            return a;
        } else {
            if (data < head.value) {
                head.leftSon = addCellRec(head.leftSon, data);
            } else {
                head.rightSon = addCellRec(head.rightSon, data);
            }
        }
        return head;
    }

    void checkIn(int value) {
        if (!valueInRec(this.head, value)) {
            println();
        }
    }

    void checkNotIn(int value) {
        boolean a = valueInRec(this.head, value);
        if (a) {
            println();
        }
    }

    boolean valueInRec(Cell head, int value) {
        if (head == null) {
            return false;
        } else {
            if (value == head.value) {
                return true;
            } else {
                if (value < head.value) {
                    return valueInRec(head.leftSon, value);
                } else {
                    return valueInRec(head.rightSon, value);
                }
            }
        }
    }
}

{
    BinaryTree tree = new BinaryTree();
    tree.addCell(0);
    tree.addCell(1);
    tree.addCell(2);

    tree.checkIn(0);
    tree.checkIn(1);
    tree.checkIn(2);
    tree.checkNotIn(80);
    tree.checkNotIn(100);
}
